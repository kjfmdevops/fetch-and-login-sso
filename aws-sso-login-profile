
#!/bin/bash

# This bash script seeks to simplify the commands to
# fetch and connect to a profile previously configured in AWS-SSO-LOGIN

# By: Kevin J. Figueroa M
# Nov 5, 2024

function listp(){
    aws configure list-profiles > /tmp/aws-profiles-list-tempfile-0001
    echo "\nListing AWS-SSO Profiles:\n\n$(cat -n /tmp/aws-profiles-list-tempfile-0001)\n"
    opn=$(wc -l /tmp/aws-profiles-list-tempfile-0001 |awk '{print $1}')
}

option=0
while :
do
    listp
    read -n1 -p "Select the profile you want to access [1.."$opn"]: " option; echo ""
    num="^[1-$opn]+$"
    if ! [[ $option =~ $num ]]; then
        echo "\nOption not valid\nmust be a number between 1 ~ $opn\n"
        exit 1
    else
        login2=$(cat -n /tmp/aws-profiles-list-tempfile-0001 |grep $option |awk '{print $2}')
        echo "\nSSO-Login to: "$login2; echo "\n"
        aws sso login --profile $login2
        echo "\n\nList active profile:\n"
        aws configure list --profile $login2

        # Configuring as default aws profile
        # Assuming your shell interpreter is zsh, if you use bash you can configure the .bashrc file
        
        grep -q AWS_DEFAULT_PROFILE $HOME/.zshrc
        if [[ $(echo $?) != 0 ]]; then
            echo "# Define AWS Default Profile" >> $HOME/.zshrc
            echo "export AWS_DEFAULT_PROFILE=$login2" >> $HOME/.zshrc
        else
            lstr=$(grep AWS_DEFAULT_PROFILE $HOME/.zshrc)
            newprofile="export AWS_DEFAULT_PROFILE=$login2"
            sed -i '' "s~$lstr~$newprofile~g" $HOME/.zshrc
        fi
        
        echo  "\n\nThe .zshrc file has been updated with the line:"
        echo  "\n\texport AWS_DEFAULT_PROFILE=$login2\n"
        echo  "\nPlease run the following command to set the new"
        echo  "account profile as the default profile:"
        echo  "\n\tsource $HOME/.zshrc\n"
        
        # Cleaning tmp file
        rm -f /tmp/aws-profiles-list-tempfile-0001

        exit 0
    fi
done